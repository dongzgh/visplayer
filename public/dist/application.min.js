"use strict";var ApplicationConfiguration=function(){var applicationModuleName="visplayer",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("slides"),ApplicationConfiguration.registerModule("users"),angular.module("core").constant("FileTypes",{models:["vis","json"],images:["png","jpg","gif"],texts:["txt","js","md"]}),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("slides").controller("UploadFilesController",["$rootScope","$scope","$log","$modalInstance","Files",function($rootScope,$scope,$log,$modalInstance,Files){$scope.files=[],$scope.names=[],$scope.ticker=0,$scope.showTicker=!1,$scope.collect=function(files){$scope.files=files,$scope.names=[],angular.isDefined(files)&&files.length>0&&files.forEach(function(file){$scope.names.push(file.name)})},$scope.$watch("files",function(){$scope.collect($scope.files)}),$scope.upload=function(){$scope.files.length>0&&($scope.showTicker=!0,Files.upload($scope.files,$scope.onprogress,$scope.onsuccess,$scope.onerror))},$scope.onprogress=function(evt){$scope.ticker=(evt.loaded/evt.total*100).toFixed(),$log.log("progress: "+$scope.ticker+"% "+evt.config.file.name)},$scope.onsuccess=function(data,status,headers,config){$log.info("%s is uploaded successfully.",config.file.name),$scope.ticker=0,$scope.showTicker=!1,$modalInstance.dismiss("success"),$rootScope.$broadcast("upload-files.success",config.file.name)},$scope.onerror=function(err){$log.error(err),$scope.ticker=0,$scope.showTicker=!1,$modalInstance.dismiss("failed"),$rootScope.$broadcast("upload-files.failed")}}]),angular.module("core").service("Dialogs",["$modal",function($modal){this.uploadFiles=function(){return $modal.open({templateUrl:"modules/core/views/upload-files.client.view.html",controller:"UploadFilesController",size:"sm"})}}]),angular.module("core").service("Files",["$resource","$window","$log","$upload","Authentication",function($resource,$window,$log,$upload,Authentication){var rc=$resource("files/:filename",{filename:"@filename"},{update:{method:"PUT"}});this.upload=function(files,onprogress,onsuccess,onerror){if(files&&files.length)for(var i=0;i<files.length;i++){var file=files[i];$upload.upload({url:"/upload",file:file}).progress(onprogress).success(onsuccess).error(onerror)}},this.query=function(onsuccess){rc.query(onsuccess)},this.load=function(filename,onprogress,onsuccess,onerror){function cbprogress(evt){var total=req.getResponseHeader("ContentLength"),perc=(evt.loaded/total*100).toFixed();$log.log("progress: "+perc+"% "+filename),onprogress(perc)}function cbsuccess(evt){$log.info("%s is loaded successfully.",filename),onsuccess(req.response)}function cberror(evt){$log.error("Failed to load %s.",filename),onerror(evt)}var req=new $window.XMLHttpRequest;req.addEventListener("progress",cbprogress,!1),req.addEventListener("load",cbsuccess,!1),req.addEventListener("error",cberror,!1),req.open("get","files/"+filename,!0),req.send()},this["delete"]=function(filename,onsucess,onerror){function cbsuccess(res){$log.info("%s is deleted successfully.",filename),onsucess&&onsucess(res)}function cberror(err){$log.error("Failed to delete %s!",filename),onerror&&onerror(err)}rc["delete"]({filename:filename},cbsuccess,cberror)}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").service("Scene",["$window","$document",function($window,$document){var container,renderer,activeCamera,activeScene,eyeLight,orbitor,i,j,BOX_SIZE=1500,GAP_SIZE=100,CAMERA_ANGLE=45,faceDefaultMaterial=(new $window.THREE.Vector3(1122.6119550523206,832.1930544185049,2077.2549403849953),new $window.THREE.MeshNormalMaterial({side:$window.THREE.DoubleSide}),new $window.THREE.MeshPhongMaterial({color:13553358,specular:16777215,metal:!0,shininess:25,side:$window.THREE.DoubleSide})),edgeDefaultMaterial=(new $window.THREE.MeshBasicMaterial({transparent:!0,opacity:.5,reflectivity:.5,envMap:function(){var path="modules/core/img/cube/",format=".jpg",urls=[path+"posx"+format,path+"negx"+format,path+"posy"+format,path+"negy"+format,path+"posz"+format,path+"negz"+format],reflectionCube=$window.THREE.ImageUtils.loadTextureCube(urls);return reflectionCube.format=$window.THREE.RGBFormat,reflectionCube}(),combine:$window.THREE.MixOperation,side:$window.THREE.DoubleSide}),new $window.THREE.LineBasicMaterial({color:3355443})),cameras=[],scenes=[];this.initialize=function(){$window.Detector.webgl||$window.Detector.addGetWebGLMessage(),createCamera(),createRenderer(),createScene(),createHelpers(),createLights(),orbitor=new $window.THREE.OrbitControls(activeCamera,renderer.domElement),$window.addEventListener("resize",onWindowResize,!1),animate()},this.queryModels=function(cb){var modelnames=[];activeScene.children.forEach(function(object){"model"===object.type&&modelnames.push(object.name)}),cb(modelnames)},this.loadModel=function(gd,cb){var count=countModelInstances(gd.name)+1,object=new $window.THREE.Object3D;object.name=gd.name,object.displayName=object.name+" #"+count,object.type="model";var faces=new $window.THREE.Object3D;object.add(faces);var edges=new $window.THREE.Object3D;for(object.add(edges),i=0;i<gd.faces.length;i++){var faceGeometry=new $window.THREE.Geometry,fd=gd.faces[i].tessellation.facets[0];for(j=0;j<fd.vertexCount;j++)faceGeometry.vertices.push(new $window.THREE.Vector3(fd.vertexCoordinates[3*j],fd.vertexCoordinates[3*j+1],fd.vertexCoordinates[3*j+2]));for(j=0;j<fd.facetCount;j++)faceGeometry.faces.push(new $window.THREE.Face3(fd.vertexIndices[3*j]-1,fd.vertexIndices[3*j+1]-1,fd.vertexIndices[3*j+2]-1));faceGeometry.key=gd.faces[i].id,faceGeometry.computeFaceNormals(),faceGeometry.computeVertexNormals(),faceGeometry.computeBoundingBox(),0===i?object.box=faceGeometry.boundingBox:object.box.union(faceGeometry.boundingBox);var faceMesh=new $window.THREE.Mesh(faceGeometry,faceDefaultMaterial);faces.add(faceMesh)}for(i=0;i<gd.edges.length;i++){var edgeGeometry=new $window.THREE.Geometry,ed=gd.edges[i].tessellation;for(j=0;j<ed.vertexCount;j++)edgeGeometry.vertices.push(new $window.THREE.Vector3(ed.points[3*j],ed.points[3*j+1],ed.points[3*j+2]));edgeGeometry.key=ed.id,edgeGeometry.computeBoundingBox();var edgeMesh=new $window.THREE.Line(edgeGeometry,edgeDefaultMaterial);edges.add(edgeMesh)}var v=new $window.THREE.Vector3,radius=v.copy(object.box.max).sub(object.box.min).length()/2,scale=BOX_SIZE/radius/2,origin=new $window.THREE.Vector3;origin.copy(object.box.min).add(object.box.max).multiplyScalar(.5*scale);var halfy=(object.box.max.y-object.box.min.y)*scale/2;faces.children.forEach(function(face){face.scale.set(scale,scale,scale),face.updateMatrix(),face.translateX(-origin.x),face.translateY(-origin.y+halfy),face.translateZ(-origin.z)}),edges.children.forEach(function(edge){edge.scale.set(scale,scale,scale),edge.updateMatrix(),edge.translateX(-origin.x),edge.translateY(-origin.y+halfy),edge.translateZ(-origin.z)}),activeScene.add(object),cb(object)},this.removeModel=function(modelname){var index=0;activeScene.children.forEach(function(object){return object.displayName===modelname?void activeScene.children.splice(index,1):void index++})};var createRenderer=function(){container=$document[0].getElementById("canvas"),renderer=$window.WebGLRenderingContext?new $window.THREE.WebGLRenderer({alpha:!0,antialias:!0}):new $window.THREE.CanvasRenderer,renderer.setSize($window.innerWidth,$window.innerHeight),renderer.autoClear=!0,container.appendChild(renderer.domElement)},createCamera=function(){var camera=new $window.THREE.PerspectiveCamera(CAMERA_ANGLE,$window.innerWidth/$window.innerHeight,1,10*BOX_SIZE);camera.name="VIEW #"+cameras.length+1,camera.position.set(2*BOX_SIZE,BOX_SIZE,2*BOX_SIZE),camera.target=new $window.THREE.Vector3,cameras.push(camera),activeCamera=camera},createScene=function(){var scene=new $window.THREE.Scene;scenes.push(scene),activeScene=scene},createHelpers=function(){var grid=new $window.THREE.GridHelper(BOX_SIZE,GAP_SIZE);grid.name="GRID",activeScene.add(grid);var axis=new $window.THREE.AxisHelper(BOX_SIZE);axis.name="AXIS",axis.visible=!1,activeScene.add(axis)},createLights=function(){eyeLight=new $window.THREE.DirectionalLight(16777215,.5),eyeLight.name="EYE LIGHT",eyeLight.position.set(BOX_SIZE,BOX_SIZE,BOX_SIZE),activeScene.add(eyeLight)},countModelInstances=function(name){var count=0;return activeScene.children.forEach(function(object){"model"===object.type&&object.name===name&&count++}),count},onWindowResize=function(){activeCamera.aspect=$window.innerWidth/$window.innerHeight,activeCamera.updateProjectionMatrix(),renderer.setSize($window.innerWidth,$window.innerHeight)},animate=function(){$window.requestAnimationFrame(animate),update(),render()},render=function(){renderer.render(activeScene,activeCamera)},update=function(){activeCamera.target.copy(orbitor.target),eyeLight.position.set(activeCamera.position.x,activeCamera.position.y,activeCamera.position.z)}}]),angular.module("core").service("Tools",[function(){this.defaultRoles=["*"],this.tools={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateToolExistance=function(toolId){if(toolId&&toolId.length){if(this.tools[toolId])return!0;throw new Error("Tool does not exists")}throw new Error("ToolId was not provided")},this.getTool=function(toolId){return this.validateToolExistance(toolId),this.tools[toolId]},this.addTool=function(toolId,isPublic,roles){return this.tools[toolId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.tools[toolId]},this.removeTool=function(toolId){this.validateToolExistance(toolId),delete this.tools[toolId]},this.addToolItem=function(toolId,toolItemTitle,toolItemIcon,toolItemURL,toolItemAction,toolItemTip,isPublic,roles,position){return this.validateToolExistance(toolId),this.tools[toolId].items.push({title:toolItemTitle,icon:toolItemIcon,link:toolItemURL||toolItemAction,uiRoute:"/"+toolItemURL,action:toolItemAction,tooltip:toolItemTip,isPublic:null===isPublic||"undefined"==typeof isPublic?this.tools[toolId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.tools[toolId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.tools[toolId]},this.removeToolItem=function(toolId,toolItemURL){this.validateToolExistance(toolId);for(var itemIndex in this.tools[toolId].items)this.tools[toolId].items[itemIndex].link===toolItemURL&&this.tools[toolId].items.splice(itemIndex,1);return this.tools[toolId]},this.addTool("sidebar"),this.addTool("panel")}]),angular.module("core").service("Trees",[function(){this.defaultRoles=["*"],this.trees={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateTreeExistance=function(treeId){if(treeId&&treeId.length){if(this.trees[treeId])return!0;throw new Error("Tree does not exists")}throw new Error("TreeId was not provided")},this.getTree=function(treeId){return this.validateTreeExistance(treeId),this.trees[treeId]},this.addTree=function(treeId,isPublic,roles){return this.trees[treeId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.trees[treeId]},this.removeTree=function(treeId){this.validateTreeExistance(treeId),delete this.trees[treeId]},this.addTreeItem=function(treeId,treeItemTitle,treeItemIcon,treeItemURL,isPublic,roles){return this.validateTreeExistance(treeId),this.trees[treeId].items.push({title:treeItemTitle,icon:treeItemIcon,link:treeItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.trees[treeId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.trees[treeId].roles:roles,items:[],shouldRender:shouldRender}),this.trees[treeId]},this.addSubTreeItem=function(treeId,rootTreeItemURL,treeItemTitle,treeItemIcon,treeItemWidgets,treeItemURL,isPublic,roles){this.validateTreeExistance(treeId);for(var itemIndex in this.trees[treeId].items)this.trees[treeId].items[itemIndex].link===rootTreeItemURL&&this.trees[treeId].items[itemIndex].items.push({title:treeItemTitle,icon:treeItemIcon,widgets:treeItemWidgets,link:treeItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.trees[treeId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.trees[treeId].items[itemIndex].roles:roles,shouldRender:shouldRender});return this.trees[treeId]},this.removeTreeItem=function(treeId,treeItemURL){this.validateTreeExistance(treeId);for(var itemIndex in this.trees[treeId].items)this.trees[treeId].items[itemIndex].link===treeItemURL&&this.trees[treeId].items.splice(itemIndex,1);return this.trees[treeId]},this.removeSubTreeItem=function(treeId,subtreeItemURL){this.validateTreeExistance(treeId);for(var itemIndex in this.trees[treeId].items)for(var subitemIndex in this.trees[treeId].items[itemIndex].items)this.trees[treeId].items[itemIndex].items[subitemIndex].link===subtreeItemURL&&this.trees[treeId].items[itemIndex].items.splice(subitemIndex,1);return this.trees[treeId]},this.addTree("fileTree"),this.addTree("sceneTree")}]),angular.module("slides").run(["Menus","Tools","Trees","Dialogs",function(Menus,Tools,Trees,Dialogs){Menus.addMenuItem("topbar","Slides","slides","dropdown"),Menus.addSubMenuItem("topbar","slides","New Slide","slides/create"),Tools.addToolItem("sidebar","Views","glyphicon-blackboard","slides/create/views"),Tools.addToolItem("sidebar","Scene","glyphicon-camera","slides/create/scene"),Tools.addToolItem("sidebar","Files","glyphicon-file","slides/create/files"),Tools.addToolItem("sidebar","Tools","glyphicon-wrench","slides/create/tools"),Tools.addToolItem("sidebar","Materials","glyphicon-tint","slides/create/materials"),Tools.addToolItem("sidebar","Markups","glyphicon-tags","slides/create/markups"),Tools.addToolItem("panel","Upload File","glyphicon-upload",null,"uploadFiles","Upload multiple files"),Tools.addToolItem("panel","Download File","glyphicon-download",null,"downloadFile","Download a file"),Tools.addToolItem("panel","Take Snapshot","glyphicon-picture",null,"takeSnapshot","Take a snapshot for the scene"),Trees.addTreeItem("fileTree","Models","glyphicon-briefcase","models"),Trees.addTreeItem("fileTree","Images","glyphicon-briefcase","images"),Trees.addTreeItem("fileTree","Texts","glyphicon-briefcase","texts"),Trees.addTreeItem("fileTree","Others","glyphicon-briefcase","others"),Trees.addTreeItem("sceneTree","Models","glyphicon-briefcase","models"),Trees.addTreeItem("sceneTree","Lights","glyphicon-briefcase","lights")}]),angular.module("slides").constant("fileWidgets",[{name:"Delete",action:"deleteFile",icon:"glyphicon-trash"},{name:"Load",action:"loadFile",icon:"glyphicon-download"},{name:"Edit",action:"editFile",icon:"glyphicon-edit"}]),angular.module("slides").constant("sceneWidgets",[{name:"Remove",action:"removeModel",icon:"glyphicon-remove"}]),angular.module("slides").factory("httpResponseInterceptor",["$q",function($q){return{response:function(res){return res||$q.when(res)}}}]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("httpResponseInterceptor")}]),angular.module("slides").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSlides",{url:"/slides",templateUrl:"modules/slides/views/list-slides.client.view.html"}).state("createSlide",{url:"/slides/create",templateUrl:"modules/slides/views/create-slide.client.view.html"}).state("createSlide.Views",{url:"/views",templateUrl:"modules/slides/views/create-slide-views.client.view.html"}).state("createSlide.Scene",{url:"/scene",templateUrl:"modules/slides/views/create-slide-scene.client.view.html"}).state("createSlide.Files",{url:"/files",templateUrl:"modules/slides/views/create-slide-files.client.view.html"}).state("createSlide.Tools",{url:"/tools",templateUrl:"modules/slides/views/create-slide-tools.client.view.html"}).state("createSlide.Materials",{url:"/materials",templateUrl:"modules/slides/views/create-slide-materials.client.view.html"}).state("createSlide.Markups",{url:"/markups",templateUrl:"modules/slides/views/create-slide-markups.client.view.html"}).state("viewSlide",{url:"/slides/:slideId",templateUrl:"modules/slides/views/view-slide.client.view.html"}).state("editSlide",{url:"/slides/:slideId/edit",templateUrl:"modules/slides/views/edit-slide.client.view.html"})}]),angular.module("slides").controller("SlidesController",["$scope","$stateParams","$location","$window","$timeout","$log","$upload","Authentication","Scene","Files","Tools","Trees","Dialogs","FileTypes","fileWidgets","sceneWidgets","Slides",function($scope,$stateParams,$location,$window,$timeout,$log,$upload,Authentication,Scene,Files,Tools,Trees,Dialogs,FileTypes,fileWidgets,sceneWidgets,Slides){function resetTicker(){$timeout(function(){$scope.showTicker=!1,$scope.ticker=0,$scope.$apply()},1e3)}function getFileIcon(ext){return-1!==FileTypes.models.indexOf(ext)?"glyphicon-knight":-1!==FileTypes.images.indexOf(ext)?"glyphicon-picture":-1!==FileTypes.texts.indexOf(ext)?"glyphicon-list-alt":"glyphicon-file"}function getFileWidgets(ext){var widgets=[];return-1!==FileTypes.models.indexOf(ext)?(widgets.push(fileWidgets[0]),widgets.push(fileWidgets[1])):-1!==FileTypes.images.indexOf(ext)?widgets.push(fileWidgets[0]):-1!==FileTypes.texts.indexOf(ext)?(widgets.push(fileWidgets[0]),widgets.push(fileWidgets[2])):widgets.push(fileWidgets[0]),widgets}function addFileItem(filename){var ext=filename.split(".").reverse()[0],icon=getFileIcon(ext),widgets=getFileWidgets(ext);-1!==FileTypes.models.indexOf(ext)?Trees.addSubTreeItem("fileTree","models",filename,icon,widgets,filename):-1!==FileTypes.images.indexOf(ext)?Trees.addSubTreeItem("fileTree","images",filename,icon,widgets,filename):-1!==FileTypes.texts.indexOf(ext)?Trees.addSubTreeItem("fileTree","texts",filename,icon,widgets,filename):Trees.addSubTreeItem("fileTree","others",filename,icon,widgets,filename)}function addSceneItem(modelname){var widgets=[];widgets.push(sceneWidgets[0]),Trees.addSubTreeItem("sceneTree","models",modelname,"glyphicon-knight",widgets,modelname)}$scope.authentication=Authentication,$scope.link=null,$scope.showPanel=!1,$scope.modalInstance=null,$scope.ticker=0,$scope.showTicker=!1,$scope.sidebarTools=Tools.getTool("sidebar"),$scope.panelTools=Tools.getTool("panel"),$scope.fileTree=Trees.getTree("fileTree"),Files.query(function(filenames){filenames&&filenames.length>0&&filenames.forEach(function(filename){addFileItem(filename.toLowerCase())})}),Scene.initialize(),$scope.sceneTree=Trees.getTree("sceneTree"),Scene.queryModels(function(modelnames){modelnames.forEach(function(modelname){addSceneItem(modelname)})}),$scope.activateTool=function(action){$scope[action]()},$scope.activatePanel=function(link){link!==$scope.link?($scope.showPanel=!0,$scope.link=link):$scope.showPanel=!$scope.showPanel},$scope.uploadFiles=function(){$scope.modalInstance=Dialogs.uploadFiles()},$scope.activateWidget=function(action,subItem){$scope[action](subItem)},$scope.loadFile=function(tree){function onprogress(perc){$scope.ticker=perc,$scope.$apply()}function onsuccess(res){var data=JSON.parse(res);Scene.loadModel(data,function(object){addSceneItem(object.displayName.toLowerCase()),resetTicker()})}function onerror(evt){resetTicker()}var filename=tree.title;$scope.showTicker=!0,Files.load(filename,onprogress,onsuccess,onerror)},$scope.deleteFile=function(item){function onsuccess(res){Trees.removeSubTreeItem("fileTree",filename)}var filename=item.title,msg="Delete "+filename+" from server?",ret=$window.confirm(msg);ret===!0&&Files["delete"](filename,onsuccess)},$scope.removeModel=function(item){var modelname=item.title;Scene.removeModel(modelname),Trees.removeSubTreeItem("sceneTree",modelname)},$scope.create=function(){var slide=new Slides({name:this.name});slide.$save(function(res){$location.path("slides/"+res._id),$scope.name=""},function(errorres){$scope.error=errorres.data.message})},$scope.remove=function(slide){if(slide){slide.$remove();for(var i in $scope.slides)$scope.slides[i]===slide&&$scope.slides.splice(i,1)}else $scope.slide.$remove(function(){$location.path("slides")})},$scope.update=function(){var slide=$scope.slide;slide.$update(function(){$location.path("slides/"+slide._id)},function(errorres){$scope.error=errorres.data.message})},$scope.find=function(){$scope.slides=Slides.query()},$scope.findOne=function(){$scope.slide=Slides.get({slideId:$stateParams.slideId})},$scope.$on("upload-files.success",function(event,filename){addFileItem(filename)})}]),angular.module("slides").factory("Slides",["$resource",function($resource){return $resource("slides/:slideId",{slideId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);