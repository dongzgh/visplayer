"use strict";var ApplicationConfiguration=function(){var applicationModuleName="visplayer",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("slides"),ApplicationConfiguration.registerModule("users"),angular.module("core").constant("FileTypes",{models:["vis","json"],images:["png","jpg","gif"],texts:["txt","js","md"]}),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("TransformModelsController",["$rootScope","$scope","$window","$log","Scene",function($rootScope,$scope,$window,$log,Scene){$scope.mode="Translate",$scope.modelname=null,$scope.enablePicking=!1,$scope.pickModel=function(){$scope.enablePicking=!$scope.enablePicking,Scene.enablePicking($scope.enablePicking,"model")},$scope.onOK=function(){$rootScope.$broadcast("gui-dialog.close")},$scope.onCancel=function(){$rootScope.$broadcast("gui-dialog.close")},$scope.$on("scene.picked",function(event,object){$scope.modelname=object.displayName,$scope.$apply()})}]),angular.module("core").controller("UploadFilesController",["$rootScope","$scope","$log","$modalInstance","Files",function($rootScope,$scope,$log,$modalInstance,Files){$scope.files=[],$scope.names=[],$scope.collect=function(files){!angular.isDefined(files)||files.length<=0||($scope.names=[],files.forEach(function(file){$scope.names.push(file.name)}))},$scope.$watch("files",function(){$scope.collect($scope.files)}),$scope.upload=function(){function onsuccess(config){$rootScope.$broadcast("upload-files.success",config.file.name)}function onfinal(passed,failed){$modalInstance.dismiss(passed.length===$scope.files.length?"success":"failed")}$scope.files.length>0&&Files.upload($scope.files,null,onsuccess,null,onfinal)}}]),angular.module("core").service("Dialogs",["$window","$modal",function($window,$modal){this.uploadFiles=function(){return $modal.open({templateUrl:"modules/core/views/upload-files.client.view.html",controller:"UploadFilesController",size:"sm"})}}]),angular.module("core").service("Files",["$resource","$http","$window","$log","$upload","Authentication",function($resource,$http,$window,$log,$upload,Authentication){var rc=$resource("files/:filename",{filename:"@filename"},{update:{method:"PUT"}});this.decryptData=function(data,userId){{var raw=JSON.parse(data),params=$window.CryptoJS.lib.CipherParams.create({ciphertext:$window.CryptoJS.enc.Hex.parse(raw.ciphertext)}),salt=$window.CryptoJS.enc.Hex.parse(raw.salt),key=$window.CryptoJS.EvpKDF(userId,salt,{keySize:4}),iv=$window.CryptoJS.enc.Hex.parse(raw.iv),dec=$window.CryptoJS.AES.decrypt(params,key,{iv:iv,mode:$window.CryptoJS.mode.CBC});dec.toString($window.CryptoJS.enc.Utf8)}},this.upload=function(files,onprogress,onsuccess,onerror,onfinal){if(angular.isDefined(files)&&!(files.length<=0)){var passed=[],failed=[];files.forEach(function(file,index){function cbprogress(update){var progress=(update.loaded/update.total*100).toFixed();$log.log("progress: "+progress+"% "+update.config.file.name),onprogress&&onprogress(progress)}function cbsuccess(data,status,getHeaders,config){passed.push(config.file.name),$log.info("%s is uploaded successfully.",config.file.name),onsuccess&&onsuccess(config),cbfinal()}function cberror(data,status,getHeaders,config){failed.push(config.file.name),$log.error("Failed to upload %s.",config.file.name),onerror&&onerror(config),cbfinal()}function cbfinal(){index===files.length-1&&onfinal&&onfinal(passed,failed)}$upload.upload({url:"/upload",file:file}).progress(cbprogress).success(cbsuccess).error(cberror)})}},this.list=function(onsuccess){function cbsuccess(data,getHeaders){onsuccess&&onsuccess(data)}rc.query(cbsuccess)},this.download=function(filenames,onsuccess,onerror){!angular.isDefined(filenames)||filenames.length<=0||filenames.forEach(function(filename){function cbsuccess(data,status,getHeaders,config){data&&onsuccess&&onsuccess(data,filename)}function cberror(data,status,getHeaders,config){onerror&&onerror(status)}var url="files/"+filename;$http.get(url,{params:{mode:"download"},responseType:"blob"}).success(cbsuccess).error(cberror)})},this.load=function(filenames,onprogress,onsuccess,onerror){!angular.isDefined(filenames)||filenames.length<=0||filenames.forEach(function(filename){function cbprogress(evt){var total=req.getResponseHeader("ContentLength"),progress=(evt.loaded/total*100).toFixed();$log.log("progress: "+progress+"% "+filename),onprogress&&onprogress(progress)}function cbsuccess(evt){$log.info("%s is loaded successfully.",filename),onsuccess&&onsuccess(req.response)}function cberror(evt){$log.error("Failed to load %s.",filenames),onerror&&onerror(evt)}var req=new $window.XMLHttpRequest;req.addEventListener("progress",cbprogress,!1),req.addEventListener("load",cbsuccess,!1),req.addEventListener("error",cberror,!1),req.open("get","files/"+filename+"?level=display",!0),req.send()})},this["delete"]=function(filenames,onsuccess,onerror){!angular.isDefined(filenames)||filenames.length<=0||filenames.forEach(function(filename){function cbsuccess(data,getHeader){$log.info("%s is deleted successfully.",filename),onsuccess&&onsuccess(filename)}function cberror(data){$log.error("Failed to delete %s!",filename),onerror&&onerror(filename)}rc["delete"]({filename:filename},cbsuccess,cberror)})}}]),angular.module("core").service("Menus",["$log",function($log){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){return menuId&&menuId.length&&!this.menus[menuId]?($log.error("Tree does not exists"),!1):!0},this.getMenu=function(menuId){return this.validateMenuExistance(menuId)?this.menus[menuId]:void 0},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId)&&delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId)?(this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]):void 0},this.removeMenuItem=function(menuId,menuItemURL){if(this.validateMenuExistance(menuId)){for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]}},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){if(this.validateMenuExistance(menuId)){for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]}},this.removeSubMenuItem=function(menuId,submenuItemURL){if(this.validateMenuExistance(menuId)){for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]}},this.addMenu("topbar")}]),angular.module("core").service("Scene",["$rootScope","$window","$document",function($rootScope,$window,$document){function onWindowResize(){activeCamera.aspect=$window.innerWidth/$window.innerHeight,activeCamera.updateProjectionMatrix(),renderer.setSize($window.innerWidth,$window.innerHeight)}function onDocumentMouseMove(event){event.preventDefault(),mouse.x=event.clientX/window.innerWidth*2-1,mouse.y=2*-(event.clientY/window.innerHeight)+1}function onDocumentMouseDown(event){isPickingEnabled&&pickObject()}function createRenderer(){container=$document[0].getElementById("canvas"),renderer=$window.WebGLRenderingContext?new $window.THREE.WebGLRenderer({alpha:!0,antialias:!0,preserveDrawingBuffer:!0}):new $window.THREE.CanvasRenderer,renderer.setSize($window.innerWidth,$window.innerHeight),renderer.setPixelRatio($window.devicePixelRatio),renderer.autoClear=!0,container.appendChild(renderer.domElement)}function createCamera(){var camera=new $window.THREE.PerspectiveCamera(CAMERA_ANGLE,$window.innerWidth/$window.innerHeight,1,10*BOX_SIZE);camera.name="VIEW #"+cameras.length+1,camera.position.set(2*BOX_SIZE,BOX_SIZE,2*BOX_SIZE),camera.target=new $window.THREE.Vector3,cameras.push(camera),activeCamera=camera}function createScene(){var scene=new $window.THREE.Scene;scenes.push(scene),activeScene=scene}function createHelpers(){var grid=new $window.THREE.GridHelper(BOX_SIZE,GAP_SIZE);grid.name="GRID",activeScene.add(grid);var axis=new $window.THREE.AxisHelper(BOX_SIZE);axis.name="AXIS",axis.visible=!1,activeScene.add(axis)}function createLights(){eyeLight=new $window.THREE.DirectionalLight(16777215,.5),eyeLight.name="EYE LIGHT",eyeLight.position.set(BOX_SIZE,BOX_SIZE,BOX_SIZE),activeScene.add(eyeLight)}function countModelInstances(name){if(null!==name)return 0;var count=0;return activeScene.children.forEach(function(object){"model"===object.type&&object.name===name&&count++}),count}function pickObject(){raycaster.setFromCamera(mouse,activeCamera);var intersects=raycaster.intersectObjects(activeScene.children,!0);if(intersects.length>0){var candidate=null;if(null===pickType)return;if(("model"===pickType||"face"===pickType)&&(candidate=getPickedModel(intersects),null===candidate))return;null!==picked?(enableHighlight(picked,!1),picked===candidate?picked=null:(picked=candidate,enableHighlight(picked,!0))):(picked=candidate,enableHighlight(picked,!0))}null!==picked&&$rootScope.$broadcast("scene.picked",picked)}function enableHighlight(object,enable){angular.isUndefined(object.material)&&angular.isDefined(object.children)?object.children.forEach(function(child){enableHighlight(child,enable)}):(angular.isUndefined(object.material.emissive)&&(object.material.emissive=new $window.THREE.Color(0)),object.material.emissive.setHex(enable?pickedColor:0))}function getPickedModel(intersects){if(0!==intersects.length){var candidate=null;for(i=0;i<intersects.length;i++)if(intersects[i].object instanceof $window.THREE.Mesh){candidate=intersects[i].object.parent.parent;break}return candidate}}function animate(){$window.requestAnimationFrame(animate),update(),render()}function render(){renderer.render(activeScene,activeCamera)}function update(){activeCamera.target.copy(orbitor.target),eyeLight.position.set(activeCamera.position.x,activeCamera.position.y,activeCamera.position.z)}var BOX_SIZE=1500,GAP_SIZE=100,CAMERA_ANGLE=45,faceDefaultMaterial=(new $window.THREE.Vector3(1122.6119550523206,832.1930544185049,2077.2549403849953),new $window.THREE.MeshPhongMaterial({color:13553358,specular:16777215,metal:!0,shininess:25,emissive:0,side:$window.THREE.DoubleSide})),edgeDefaultMaterial=(new $window.THREE.MeshNormalMaterial({side:$window.THREE.DoubleSide}),new $window.THREE.MeshBasicMaterial({transparent:!0,opacity:.5,reflectivity:.5,envMap:function(){var path="modules/core/img/cube/",format=".jpg",urls=[path+"posx"+format,path+"negx"+format,path+"posy"+format,path+"negy"+format,path+"posz"+format,path+"negz"+format],reflectionCube=$window.THREE.ImageUtils.loadTextureCube(urls);return reflectionCube.format=$window.THREE.RGBFormat,reflectionCube}(),combine:$window.THREE.MixOperation,side:$window.THREE.DoubleSide}),new $window.THREE.LineBasicMaterial({color:3355443})),container=null,renderer=null,cameras=[],activeCamera=null,scenes=[],activeScene=null,eyeLight=null,orbitor=null,raycaster=null,isPickingEnabled=!1,pickType=null,picked=null,pickedColor=15218494,mouse=new $window.THREE.Vector2,i=0,j=0;this.initialize=function(){$window.Detector.webgl||$window.Detector.addGetWebGLMessage(),createCamera(),createRenderer(),createScene(),createHelpers(),createLights(),orbitor=new $window.THREE.OrbitControls(activeCamera,renderer.domElement),raycaster=new $window.THREE.Raycaster,$window.addEventListener("resize",onWindowResize,!1),$document[0].addEventListener("mousemove",onDocumentMouseMove,!1),$document[0].addEventListener("mousedown",onDocumentMouseDown,!1),animate()},this.queryModels=function(onsuccess){var modelnames=[];activeScene.children.forEach(function(object){"model"===object.type&&modelnames.push(object.name)}),onsuccess&&onsuccess(modelnames)},this.loadModel=function(gd,onsuccess){if(null!==gd){var count=countModelInstances(gd.name)+1,object=new $window.THREE.Object3D;object.name=gd.name,object.displayName=object.name+" #"+count,object.type="model";var faces=new $window.THREE.Object3D;object.add(faces);var edges=new $window.THREE.Object3D;for(object.add(edges),i=0;i<gd.faces.length;i++){var faceGeometry=new $window.THREE.Geometry,fd=gd.faces[i].tessellation.facets[0];for(j=0;j<fd.vertexCount;j++)faceGeometry.vertices.push(new $window.THREE.Vector3(fd.vertexCoordinates[3*j],fd.vertexCoordinates[3*j+1],fd.vertexCoordinates[3*j+2]));for(j=0;j<fd.facetCount;j++)faceGeometry.faces.push(new $window.THREE.Face3(fd.vertexIndices[3*j]-1,fd.vertexIndices[3*j+1]-1,fd.vertexIndices[3*j+2]-1));faceGeometry.key=gd.faces[i].id,faceGeometry.computeFaceNormals(),faceGeometry.computeVertexNormals(),faceGeometry.computeBoundingBox(),0===i?object.box=faceGeometry.boundingBox:object.box.union(faceGeometry.boundingBox);var faceMesh=new $window.THREE.Mesh(faceGeometry,faceDefaultMaterial.clone());faces.add(faceMesh)}for(i=0;i<gd.edges.length;i++){var edgeGeometry=new $window.THREE.Geometry,ed=gd.edges[i].tessellation;for(j=0;j<ed.vertexCount;j++)edgeGeometry.vertices.push(new $window.THREE.Vector3(ed.points[3*j],ed.points[3*j+1],ed.points[3*j+2]));edgeGeometry.key=ed.id,edgeGeometry.computeBoundingBox();var edgeMesh=new $window.THREE.Line(edgeGeometry,edgeDefaultMaterial.clone());edges.add(edgeMesh)}var v=new $window.THREE.Vector3,radius=v.copy(object.box.max).sub(object.box.min).length()/2,scale=BOX_SIZE/radius/2,origin=new $window.THREE.Vector3;origin.copy(object.box.min).add(object.box.max).multiplyScalar(.5*scale);var halfy=(object.box.max.y-object.box.min.y)*scale/2;faces.children.forEach(function(face){face.scale.set(scale,scale,scale),face.updateMatrix(),face.translateX(-origin.x),face.translateY(-origin.y+halfy),face.translateZ(-origin.z)}),edges.children.forEach(function(edge){edge.scale.set(scale,scale,scale),edge.updateMatrix(),edge.translateX(-origin.x),edge.translateY(-origin.y+halfy),edge.translateZ(-origin.z)}),activeScene.add(object),onsuccess&&onsuccess(object)}},this.removeObject=function(objname){if(null!==objname){var index=0;activeScene.children.forEach(function(object){return object.displayName===objname?void activeScene.children.splice(index,1):void index++})}},this.enablePicking=function(enable,type){isPickingEnabled=enable,angular.isDefined(type)&&(pickType=type),picked=null}}]),angular.module("core").service("Tools",["$log",function($log){this.defaultRoles=["*"],this.tools={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateToolExistance=function(toolId){return toolId&&toolId.length&&!this.tools[toolId]?($log.error("Tree does not exists"),!1):!0},this.getTool=function(toolId){return this.validateToolExistance(toolId)?this.tools[toolId]:void 0},this.addTool=function(toolId,isPublic,roles){return this.tools[toolId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.tools[toolId]},this.removeTool=function(toolId){this.validateToolExistance(toolId)&&delete this.tools[toolId]},this.addToolItem=function(toolId,toolItemTitle,toolItemIcon,toolItemURL,toolItemAction,toolItemTip,isPublic,roles,position){return this.validateToolExistance(toolId)?(this.tools[toolId].items.push({title:toolItemTitle,icon:toolItemIcon,link:toolItemURL||toolItemAction,uiRoute:"/"+toolItemURL,action:toolItemAction,tooltip:toolItemTip,isPublic:null===isPublic||"undefined"==typeof isPublic?this.tools[toolId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.tools[toolId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.tools[toolId]):void 0},this.removeToolItem=function(toolId,toolItemURL){if(this.validateToolExistance(toolId)){for(var itemIndex in this.tools[toolId].items)this.tools[toolId].items[itemIndex].link===toolItemURL&&this.tools[toolId].items.splice(itemIndex,1);return this.tools[toolId]}}}]),angular.module("core").service("Trees",["$log",function($log){this.defaultRoles=["*"],this.trees={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateTreeExistance=function(treeId){return treeId&&treeId.length&&!this.trees[treeId]?($log.error("Tree does not exists"),!1):!0},this.getTree=function(treeId){return this.validateTreeExistance(treeId)?this.trees[treeId]:void 0},this.addTree=function(treeId,isPublic,roles){return this.trees[treeId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.trees[treeId]},this.emptyTree=function(treeId){if(this.validateTreeExistance(treeId))for(var itemIndex in this.trees[treeId].items)this.trees[treeId].items[itemIndex].items=[]},this.removeTree=function(treeId){this.validateTreeExistance(treeId)&&delete this.trees[treeId]},this.validateTreeItemExistance=function(treeId,treeItemURL){if(treeItemURL&&treeItemURL.length)for(var itemIndex in this.trees[treeId].items)if(this.trees[treeId].items[itemIndex].link===treeItemURL)return $log.error("Tree item is already existant"),!1;return!0},this.addTreeItem=function(treeId,treeItemTitle,treeItemIcon,treeItemURL,isPublic,roles){return this.validateTreeExistance(treeId)&&this.validateTreeItemExistance(treeId,treeItemURL)?(this.trees[treeId].items.push({title:treeItemTitle,icon:treeItemIcon,link:treeItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.trees[treeId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.trees[treeId].roles:roles,items:[],checked:!1,shouldRender:shouldRender}),this.trees[treeId]):void 0},this.removeTreeItem=function(treeId,treeItemURL){if(this.validateTreeExistance(treeId)){for(var itemIndex in this.trees[treeId].items)this.trees[treeId].items[itemIndex].link===treeItemURL&&this.trees[treeId].items.splice(itemIndex,1);return this.trees[treeId]}},this.validateSubTreeItemExistance=function(treeId,rootTreeItemURL,subtreeItemURL){if(subtreeItemURL&&subtreeItemURL.length)for(var itemIndex in this.trees[treeId].items)if(this.trees[treeId].items[itemIndex].link===rootTreeItemURL)for(var subitemIndex in this.trees[treeId].items[itemIndex].items)if(this.trees[treeId].items[itemIndex].items[subitemIndex].link===subtreeItemURL)return $log.error("Sub tree item is already existant"),!1;return!0},this.addSubTreeItem=function(treeId,rootTreeItemURL,treeItemTitle,treeItemIcon,treeItemURL,isPublic,roles){if(this.validateTreeExistance(treeId)&&this.validateTreeItemExistance(treeId,treeItemURL)&&this.validateSubTreeItemExistance(treeId,rootTreeItemURL,treeItemURL)){for(var itemIndex in this.trees[treeId].items)this.trees[treeId].items[itemIndex].link===rootTreeItemURL&&this.trees[treeId].items[itemIndex].items.push({title:treeItemTitle,icon:treeItemIcon,link:treeItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.trees[treeId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.trees[treeId].items[itemIndex].roles:roles,checked:!1,shouldRender:shouldRender});return this.trees[treeId]}},this.removeSubTreeItem=function(treeId,subtreeItemURL){if(this.validateTreeExistance(treeId)){for(var itemIndex in this.trees[treeId].items)for(var subitemIndex in this.trees[treeId].items[itemIndex].items)this.trees[treeId].items[itemIndex].items[subitemIndex].link===subtreeItemURL&&this.trees[treeId].items[itemIndex].items.splice(subitemIndex,1);return this.trees[treeId]}},this.checkAllSubTreeItems=function(treeId,rootTreeItemURL,checked){if(this.validateTreeExistance(treeId))for(var itemIndex in this.trees[treeId].items)if(this.trees[treeId].items[itemIndex].link===rootTreeItemURL){var item=this.trees[treeId].items[itemIndex];if(angular.isDefined(item.items)&&item.items.length>0)for(var subitemIndex in item.items)item.items[subitemIndex].checked=checked}},this.getCheckedSubTreeItems=function(treeId){if(this.validateTreeExistance(treeId)){var items=[];for(var itemIndex in this.trees[treeId].items)for(var subitemIndex in this.trees[treeId].items[itemIndex].items)this.trees[treeId].items[itemIndex].items[subitemIndex].checked===!0&&items.push(this.trees[treeId].items[itemIndex].items[subitemIndex]);return items}}}]),angular.module("slides").run(["Menus","Tools","Trees","Dialogs",function(Menus,Tools,Trees,Dialogs){Menus.addMenuItem("topbar","Slides","slides","dropdown"),Menus.addSubMenuItem("topbar","slides","New Project","slides/create"),Tools.addTool("sidebar"),Tools.addTool("views"),Tools.addTool("scene"),Tools.addTool("files"),Tools.addTool("modeling"),Tools.addTool("materials"),Tools.addTool("markups"),Tools.addToolItem("sidebar","Views","glyphicon-blackboard","slides/create/views",null,"List of views"),Tools.addToolItem("sidebar","Scene","glyphicon-camera","slides/create/scene",null,"List of scene objects"),Tools.addToolItem("sidebar","Files","glyphicon-file","slides/create/files",null,"List of files"),Tools.addToolItem("sidebar","Modeling","glyphicon-wrench","slides/create/modeling",null,"List of modeling tools"),Tools.addToolItem("sidebar","Materials","glyphicon-tint","slides/create/materials",null,"List of materials"),Tools.addToolItem("sidebar","Markups","glyphicon-tags","slides/create/markups",null,"List of markups"),Tools.addToolItem("scene","Take Snapshot","glyphicon-picture",null,"takeSnapshot","Take a snapshot for the scene"),Tools.addToolItem("scene","Remove Objects","glyphicon-remove",null,"removeObjects","Remove objects from scene"),Tools.addToolItem("files","Upload Files","glyphicon-cloud-upload",null,"uploadFiles","Upload files to server"),Tools.addToolItem("files","Download Files","glyphicon-cloud-download",null,"downloadFiles","Download files from server"),Tools.addToolItem("files","Load Files","glyphicon-download",null,"loadFiles","Load files into scene"),Tools.addToolItem("files","Delete Files","glyphicon-remove",null,"deleteFiles","Delete files from server"),Tools.addToolItem("modeling","Transform","glyphicon-random",null,"transformModel","Transform model"),Trees.addTree("files"),Trees.addTree("scene"),Trees.addTreeItem("files","Models","glyphicon-briefcase","models"),Trees.addTreeItem("files","Images","glyphicon-briefcase","images"),Trees.addTreeItem("files","Texts","glyphicon-briefcase","texts"),Trees.addTreeItem("files","Others","glyphicon-briefcase","others"),Trees.addTreeItem("scene","Models","glyphicon-briefcase","models"),Trees.addTreeItem("scene","Lights","glyphicon-briefcase","lights"),Trees.addTreeItem("scene","Markups","glyphicon-briefcase","markups")}]),angular.module("slides").factory("httpResponseInterceptor",["$q",function($q){return{response:function(res){return res||$q.when(res)}}}]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("httpResponseInterceptor")}]),angular.module("slides").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSlides",{url:"/slides",templateUrl:"modules/slides/views/list-slides.client.view.html"}).state("createSlide",{url:"/slides/create",templateUrl:"modules/slides/views/create-slide.client.view.html"}).state("createSlide.Views",{url:"/views",templateUrl:"modules/slides/views/create-slide-views.client.view.html"}).state("createSlide.Scene",{url:"/scene",templateUrl:"modules/slides/views/create-slide-scene.client.view.html"}).state("createSlide.Files",{url:"/files",templateUrl:"modules/slides/views/create-slide-files.client.view.html"}).state("createSlide.Modeling",{url:"/modeling",templateUrl:"modules/slides/views/create-slide-modeling.client.view.html"}).state("createSlide.Materials",{url:"/materials",templateUrl:"modules/slides/views/create-slide-materials.client.view.html"}).state("createSlide.Markups",{url:"/markups",templateUrl:"modules/slides/views/create-slide-markups.client.view.html"}).state("viewSlide",{url:"/slides/:slideId",templateUrl:"modules/slides/views/view-slide.client.view.html"}).state("editSlide",{url:"/slides/:slideId/edit",templateUrl:"modules/slides/views/edit-slide.client.view.html"})}]),angular.module("slides").controller("SlidesController",["$scope","$stateParams","$location","$window","$document","$log","$controller","$upload","Authentication","Scene","Files","Tools","Trees","Dialogs","FileTypes","Slides",function($scope,$stateParams,$location,$window,$document,$log,$controller,$upload,Authentication,Scene,Files,Tools,Trees,Dialogs,FileTypes,Slides){function getCheckedSubTreeItems(treeId){var items=Trees.getCheckedSubTreeItems(treeId),names=[];return items.forEach(function(item){names.push(item.title)}),names}function getFileIcon(ext){return-1!==FileTypes.models.indexOf(ext)?"glyphicon-knight":-1!==FileTypes.images.indexOf(ext)?"glyphicon-picture":-1!==FileTypes.texts.indexOf(ext)?"glyphicon-list-alt":"glyphicon-file"}function addFileItem(filename){var ext=filename.split(".").reverse()[0],icon=getFileIcon(ext);-1!==FileTypes.models.indexOf(ext)?Trees.addSubTreeItem("files","models",filename,icon,filename):-1!==FileTypes.images.indexOf(ext)?Trees.addSubTreeItem("files","images",filename,icon,filename):-1!==FileTypes.texts.indexOf(ext)?Trees.addSubTreeItem("files","texts",filename,icon,filename):Trees.addSubTreeItem("files","others",filename,icon,filename)}function downloadData(url,filename){var el=$document[0].getElementById("download");el.href=url,el.download=filename,el.click()}function addSceneItem(modelname){Trees.addSubTreeItem("scene","models",modelname,"glyphicon-knight",modelname)}$scope.authentication=Authentication,$scope.link=null,$scope.showPanel=!1,$scope.modal=null,$scope.gui=null,$scope.guiTemplate=null,$scope.sidebarTools=Tools.getTool("sidebar"),$scope.viewTools=Tools.getTool("views"),$scope.sceneTools=Tools.getTool("scene"),$scope.fileTools=Tools.getTool("files"),$scope.modelingTools=Tools.getTool("modeling"),$scope.materialTools=Tools.getTool("materials"),$scope.markupTools=Tools.getTool("markups"),Trees.emptyTree("files"),$scope.fileTree=Trees.getTree("files"),Files.list(function(filenames){filenames&&filenames.length>0&&filenames.forEach(function(filename){addFileItem(filename.toLowerCase())})}),Scene.initialize(),Trees.emptyTree("scene"),$scope.sceneTree=Trees.getTree("scene"),Scene.queryModels(function(modelnames){modelnames.forEach(function(modelname){addSceneItem(modelname)})}),$scope.activatePanel=function(link){link!==$scope.link?($scope.showPanel=!0,$scope.link=link,$location.url(link)):$scope.showPanel=!$scope.showPanel},$scope.activateTool=function(action){null!==action&&$scope[action]()},$scope.checkAllFiles=function(item){item.checked=!item.checked,Trees.checkAllSubTreeItems("files",item.link,item.checked)},$scope.checkAllObjects=function(item){item.checked=!item.checked,Trees.checkAllSubTreeItems("scene",item.link,item.checked)},$scope.disableCheckAll=function(item){return 0===item.items.length?(item.checked=!1,!0):!1},$scope.takeSnapshot=function(){var el=$document[0].getElementById("canvas").children[0],url=el.toDataURL("image/png");downloadData(url,"screenshot.png")},$scope.removeObjects=function(){var objnames=getCheckedSubTreeItems("scene");objnames.forEach(function(objname){Scene.removeObject(objname),Trees.removeSubTreeItem("scene",objname)})},$scope.uploadFiles=function(){$scope.modal=Dialogs.uploadFiles()},$scope.downloadFiles=function(){function onsuccess(data,filename){var blob=new $window.Blob([data]),windowURL=$window.URL||$window.webkitURL,url=windowURL.createObjectURL(blob);downloadData(url,filename)}var filenames=getCheckedSubTreeItems("files");Files.download(filenames,onsuccess)},$scope.loadFiles=function(){function onsuccess(res){var data=JSON.parse(res);Scene.loadModel(data,function(object){addSceneItem(object.displayName.toLowerCase())})}var filenames=getCheckedSubTreeItems("files");Files.load(filenames,null,onsuccess)},$scope.deleteFiles=function(){function onsuccess(filename){Trees.removeSubTreeItem("files",filename)}function onerror(filename){$window.alert("Failed to delete: "+filename)}var filenames=getCheckedSubTreeItems("files");Files["delete"](filenames,onsuccess,onerror)},$scope.transformModel=function(){$scope.guiTemplate="modules/core/views/transform-models.client.view.html"},$scope.create=function(){var slide=new Slides({name:this.name});slide.$save(function(res){$location.path("slides/"+res._id),$scope.name=""},function(errorres){$scope.error=errorres.data.message})},$scope.remove=function(slide){if(slide){slide.$remove();for(var i in $scope.slides)$scope.slides[i]===slide&&$scope.slides.splice(i,1)}else $scope.slide.$remove(function(){$location.path("slides")})},$scope.update=function(){var slide=$scope.slide;slide.$update(function(){$location.path("slides/"+slide._id)},function(errorres){$scope.error=errorres.data.message})},$scope.find=function(){$scope.slides=Slides.query()},$scope.findOne=function(){$scope.slide=Slides.get({slideId:$stateParams.slideId})},$scope.$on("upload-files.success",function(event,filename){
addFileItem(filename)}),$scope.$on("gui-dialog.close",function(event){$scope.guiTemplate=null})}]),angular.module("slides").factory("Slides",["$resource",function($resource){return $resource("slides/:slideId",{slideId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);